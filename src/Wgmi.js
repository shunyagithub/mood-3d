/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber';
import React, { useRef, useState } from 'react';
import * as THREE from 'three';
import { proxy, useSnapshot } from 'valtio';

const state = proxy({
  current: null,
  items: {
    keyW: false,
    keyG: false,
    keyM: false,
    keyI: false,
  },
});

const faceState = proxy({
  eyes: null,
  mouth: null,
  glasses: null,
});

const Wgmi = ({ controls }, props) => {
  const group = useRef();
  const eyeRef = useRef();
  const mouthRef = useRef();
  const glassesRef = useRef();

  const { nodes, materials } = useGLTF('/model/WGMI.glb');
  const [vec] = useState(() => new THREE.Vector3());
  const snap = useSnapshot(state);
  const faceSnap = useSnapshot(faceState);

  const { mouse } = useThree();

  useFrame(() => {
    const { keyW, keyG, keyM, keyI } = controls.current;

    state.items.keyW = keyW;
    state.items.keyG = keyG;
    state.items.keyM = keyM;
    state.items.keyI = keyI;

    faceState.eyes = eyeRef.current.position.lerp(vec.set(mouse.x * 0.2, mouse.y * 0.15, 0), 0.05);
    faceState.mouth = mouthRef.current.position.lerp(vec.set(mouse.x * 0.25, mouse.y * 0.2, 0), 0.05);
    faceState.glasses = glassesRef.current.position.lerp(vec.set(mouse.x * 0.1, mouse.y * 0.05, 0), 0.05);
  });

  const keyPosition = [0, 0, -0.2];

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KEY_M.geometry}
        material={materials.Material}
        rotation={[1.34, 0, 0]}
        position={snap.items.keyM ? keyPosition : [0, 0, 0]}
      >
        <mesh castShadow receiveShadow geometry={nodes.W.geometry} material={nodes.W.material} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KEY_G.geometry}
        material={materials['Material.001']}
        rotation={[1.34, 0, 0]}
        position={snap.items.keyG ? keyPosition : [0, 0, 0]}
      >
        <mesh castShadow receiveShadow geometry={nodes.W001.geometry} material={nodes.W001.material} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KEY_W.geometry}
        material={materials['Material.003']}
        rotation={[1.34, 0, 0]}
        position={snap.items.keyW ? keyPosition : [0, 0, 0]}
      >
        <mesh castShadow receiveShadow geometry={nodes.W002.geometry} material={nodes.W002.material} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.KEY_I.geometry}
        material={materials['Material.002']}
        rotation={[1.34, 0, 0]}
        position={snap.items.keyI ? keyPosition : [0, 0, 0]}
      >
        <mesh castShadow receiveShadow geometry={nodes.W003.geometry} material={nodes.W003.material} />
      </mesh>
      <mesh
        ref={glassesRef}
        position={faceSnap.glasses}
        castShadow
        receiveShadow
        geometry={nodes.Torus007.geometry}
        material={nodes.Torus007.material}
        rotation={[-1.8, 0, Math.PI]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Torus.geometry}
          material={nodes.Torus.material}
          rotation={[Math.PI, 0, Math.PI]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube_1.geometry}
            material={nodes.Cube_1.material}
            rotation={[-Math.PI, 0, -Math.PI]}
          />
          <mesh castShadow receiveShadow geometry={nodes.Torus002.geometry} material={nodes.Torus002.material} />
          <mesh castShadow receiveShadow geometry={nodes.Torus003.geometry} material={nodes.Torus003.material} />
        </mesh>
        <mesh castShadow receiveShadow geometry={nodes.Torus001.geometry} material={nodes.Torus001.material}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube001_1.geometry}
            material={nodes.Cube001_1.material}
            rotation={[-Math.PI, 0, -Math.PI]}
          />
          <mesh castShadow receiveShadow geometry={nodes.Torus004.geometry} material={nodes.Torus004.material} />
          <mesh castShadow receiveShadow geometry={nodes.Torus005_1.geometry} material={nodes.Torus005_1.material} />
        </mesh>
      </mesh>
      <mesh castShadow receiveShadow geometry={nodes.Body.geometry} material={nodes.Body.material}>
        <mesh castShadow receiveShadow geometry={nodes.Foo.geometry} material={nodes.Foo.material} />
        <mesh castShadow receiveShadow geometry={nodes.Neck.geometry} material={nodes.Neck.material}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.BezierCurve001.geometry}
            material={nodes.BezierCurve001.material}
            position={[-0.24, -0.73, 0.96]}
            rotation={[0, -1.57, 0]}
            scale={[0.89, 0.89, 0.89]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.BezierCurve003.geometry}
              material={nodes.BezierCurve003.material}
              position={[-1.2, 0.82, -0.37]}
            />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.BezierCurve002.geometry}
            material={nodes.BezierCurve002.material}
            position={[0.25, -0.73, 0.96]}
            rotation={[0, -1.57, 0]}
            scale={[0.89, 0.89, 0.89]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.BezierCurve004.geometry}
              material={nodes.BezierCurve004.material}
              position={[-1.2, 0.82, -0.37]}
            />
          </mesh>
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.WGMI_body.geometry}
          material={nodes.WGMI_body.material}
          rotation={[1.49, 0, 0]}
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus009.geometry}
        material={nodes.Torus009.material}
        position={[-0.24, -0.74, 0.16]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.04}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus006.geometry}
        material={nodes.Torus006.material}
        position={[0.25, -0.74, 0.16]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.04}
      />
      <group ref={eyeRef} position={faceSnap.eyes}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.eye_left.geometry}
          material={nodes.eye_left.material}
          rotation={[1.34, 0, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.eye_right.geometry}
          material={nodes.eye_right.material}
          rotation={[1.34, 0, 0]}
        />
      </group>
      <mesh
        ref={mouthRef}
        position={faceSnap.mouth}
        castShadow
        receiveShadow
        geometry={nodes.mouth.geometry}
        material={nodes.mouth.material}
        rotation={[1.34, 0, 0]}
      />
    </group>
  );
};

useGLTF.preload('/model/WGMI.glb');

export default Wgmi;
