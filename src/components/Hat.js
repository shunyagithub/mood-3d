/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { a, easings, useSpring } from '@react-spring/three';
import { useGLTF } from '@react-three/drei';
import React, { useEffect, useRef } from 'react';

export default function Hat({ floatDuration }, props) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/model/MOOD/models/flippers.glb');

  const [hat, api] = useSpring(
    () => ({ position: [0, 2, 0], rotation: [0, 0, 0], config: { mass: 5, tension: 100 } }),
    [],
  );
  useEffect(() => {
    const floatDuration = 600;
    let timeout;
    let floating = false;
    const bounce = () => {
      api.start({
        rotation: [0, 0, floating ? 0 : 0.1 + Math.PI / 8],
        delay: 100,
        duration: 300,
        easings: easings.easeInSine,
      });
      if (floating) {
        api.start({
          position: [0, 1.86, 0],
          easings: easings.easeOutBack,
          duration: floatDuration,
        });
      } else {
        api.start({
          position: [0, 2.4, 0],
          easings: easings.easeInBack,
          duration: floatDuration,
        });
      }

      floating = !floating;
      if (floating) {
        timeout = setTimeout(bounce, floatDuration * 2 - 200);
      } else {
        timeout = setTimeout(bounce, 2000);
      }
    };
    bounce();
    return () => clearTimeout(timeout);
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <a.mesh {...hat} castShadow receiveShadow geometry={nodes.Cylinder005.geometry} material={materials.pink} />
    </group>
  );
}

useGLTF.preload('/model/MOOD/models/flippers.glb');
